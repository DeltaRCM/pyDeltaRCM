# This workflow installs and tests pyDeltaRCM on mulitple python versions and operating systems.

name: build

on: [push, pull_request]

jobs:


  test:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install -r requirements.txt
    - name: Install pyDeltaRCM
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pytest --mpl --mpl-baseline-path=tests/imgs_baseline


  coverage:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    env:
      OS: ${{ matrix.os }}
      PYTHON: 3.8

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.PYTHON }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mpl coveralls
        pip install -r requirements.txt
    - name: Install pyDeltaRCM
      run: |
        pip install -e .
    - name: Disable jitted for coverage
      run: |
        echo "DISABLE_JIT: 1" > .numba_config.yaml
    - name: Test with pytest
      run: |
        pytest --ignore=tests/integration/ --cov=pyDeltaRCM/ --cov-report=xml --mpl --mpl-baseline-path=tests/imgs_baseline
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        env_vars: OS
        name: codecov-umbrella
        fail_ci_if_error: true


  docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-docs.txt
        sudo apt update -y && sudo apt install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended dvipng
    - name: Install pyDeltaRCM
      run: |
        python setup.py install
    - name: Build and test documentation
      run: |
        (cd docs && make docs)
    - name: Upload log file
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: log-file
        path: docs/deltaRCM_Output/*.log
    - name: Debug
      run: |
        echo $REF
        echo $EVENT_NAME
        echo ${{ github.event_name == 'push' }}
        echo ${{ github.ref == 'refs/heads/develop' }}
        echo ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
      with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT_NAME: ${{ github.event_name }}
          REF: ${{ github.ref }}
          BRANCH: gh-pages
          FOLDER: docs/build/html
